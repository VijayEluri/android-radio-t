buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:0.3.0'
    }
}

apply plugin: 'scala'
apply plugin: 'application'
apply plugin: 'ssh'

version = '1.0'
mainClassName = "JettyLauncher"


repositories {
    mavenCentral()
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

ssh {
    knownHosts = allowAnyHosts
}

remotes {
    vagrant {
        host = 'localhost'
        port = 2222
        user = 'vagrant'
        identity = new File('~/.vagrant.d/insecure_private_key')
    }
}

task deployVagrant(type: SshTask, dependsOn: 'distTar') {
    description 'Deploys the server to the local Vagrant environment'

    session(remotes.vagrant) {
        execute('echo Hello')
    }
}

dependencies {
    compile 'org.scala-lang:scala-library:2.10.3'
    compile 'org.scalatra:scalatra_2.10:2.3.0.M1'
    compile 'org.scalatra:scalatra-atmosphere_2.10:2.3.0.RC1'
    compile 'org.json4s:json4s-jackson_2.10:3.2.7'
    compile 'org.eclipse.jetty:jetty-webapp:9.1.3.v20140225'
    compile 'org.eclipse.jetty.websocket:websocket-server:9.1.3.v20140225'
    compile 'ch.qos.logback:logback-classic:1.1.1'
    compile files('libs/smack-3.4.1-0cec571.jar', 'libs/smackx-3.4.1-0cec571.jar')

    testCompile 'org.scalatra:scalatra-scalatest_2.10:2.3.0.RC1'
    testCompile 'org.eclipse.jetty.websocket:websocket-client:9.1.3.v20140225'
}